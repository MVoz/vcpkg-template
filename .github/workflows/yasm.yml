name: YASM

on:
  pull_request:
    branches:
    - '*'

jobs:
  build-windows:
    name: build & install yasm
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 1
        ref: 'c9db6d70a9ab62ce58a1cf123f2007d7a3ccc528'
        submodules: 'recursive'
        repository: 'yasm/yasm'
    - name: yasm build & install
      run: |
        cmake -E make_directory build
        cmake -S . -B build -G"Visual Studio 16 2019" -Ax64 -T"host=x64" -DCMAKE_BUILD_TYPE=Release -LA -DCMAKE_INSTALL_PREFIX="artifact/yasm"
        cmake.exe --build build --config Release --target install

    - uses: actions/cache@master
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: '${{ github.workspace }}/artifact/yasm'
        # An explicit key for restoring and saving the cache
        key: yasm
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        #restore-keys: # optional
    
    - uses: actions/upload-artifact@master
      with:
        # Artifact name
        name: 'yasm'
        # A file, directory or wildcard pattern that describes what to upload
        path: '${{ github.workspace }}/artifact/yasm/*'
  release:
#    if: contains(github.ref, 'tags/v')
#    if: contains(github.ref)
    runs-on: ubuntu-latest
    needs: build-windows
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 1
        ref: 'c9db6d70a9ab62ce58a1cf123f2007d7a3ccc528'
        submodules: 'recursive'
        repository: 'yasm/yasm'
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false

  publish:
#    if: contains(github.ref)
    runs-on: windows-latest
    needs: release
    steps:
    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: 'yasm'
        path: '${{ github.workspace }}/artifact/yasm'

    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: '${{ github.workspace }}/artifact/yasm'
        asset_name: 'yasm'
        asset_content_type: application/zip 

