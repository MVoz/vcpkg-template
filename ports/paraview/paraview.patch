diff --git a/CMake/ParaViewClient.cmake b/CMake/ParaViewClient.cmake
index 0333d354b..c348a674d 100644
--- a/CMake/ParaViewClient.cmake	
+++ b/CMake/ParaViewClient.cmake
@@ -456,10 +456,12 @@ function (paraview_client_documentation)
   endif ()
 
   include("${_ParaViewClient_cmake_dir}/paraview-find-package-helpers.cmake" OPTIONAL)
+  message(STATUS "Qt5DIR:${Qt5_DIR}")
   find_program(qt_xmlpatterns_executable
     NAMES xmlpatterns-qt5 xmlpatterns
     HINTS "${Qt5_DIR}/../../../bin"
           "${Qt5_DIR}/../../../libexec/qt5/bin"
+          "${Qt5_DIR}/../../../tools/qt5-xmlpatterns/bin"
     DOC   "Path to xmlpatterns")
   mark_as_advanced(qt_xmlpatterns_executable)
 
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 588da1883..28af52f7a 100644
--- a/CMakeLists.txt	
+++ b/CMakeLists.txt
@@ -72,7 +72,9 @@ if (NOT CMAKE_ARCHIVE_OUTPUT_DIRECTORY)
 endif ()
 
 set(paraview_cmake_dir "${CMAKE_CURRENT_SOURCE_DIR}/CMake")
-set(vtk_cmake_dir "${CMAKE_CURRENT_SOURCE_DIR}/VTK/CMake")
+set(vtk_cmake_dir "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/share/vtk")
+string(REPLACE "/debug" "" vtk_cmake_dir "${vtk_cmake_dir}")
+message(STATUS "${vtk_cmake_dir}")
 list(APPEND CMAKE_MODULE_PATH
   "${paraview_cmake_dir}"
   "${vtk_cmake_dir}")
@@ -187,7 +189,7 @@ option(PARAVIEW_ENABLE_PYTHON "Enable/Disable Python scripting support" OFF)
 
 set(paraview_web_default ON)
 if (PARAVIEW_ENABLE_PYTHON AND WIN32)
-  include("${CMAKE_CURRENT_SOURCE_DIR}/VTK/CMake/FindPythonModules.cmake")
+  include(FindPythonModules)
   find_python_module(win32api have_pywin32)
   set(paraview_web_default "${have_pywin32}")
 endif ()
@@ -288,7 +290,7 @@ cmake_dependent_option(PARAVIEW_BUILD_CATALYST_ADAPTORS
 mark_as_advanced(PARAVIEW_BUILD_CATALYST_ADAPTORS)
 
 # XXX(VTK): External VTK is not yet actually supported.
-if (FALSE)
+if (TRUE)
 option(PARAVIEW_USE_EXTERNAL_VTK "Use an external VTK." OFF)
 mark_as_advanced(PARAVIEW_USE_EXTERNAL_VTK)
 else ()
@@ -721,12 +723,43 @@ set(_paraview_CMAKE_INSTALL_RPATH_save
   "${CMAKE_INSTALL_RPATH}")
 list(APPEND CMAKE_INSTALL_RPATH
   "$ORIGIN")
-
+message(STATUS EXTERNALVTK?:${PARAVIEW_USE_EXTERNAL_VTK})
 if (PARAVIEW_USE_EXTERNAL_VTK)
   if (paraview_required_modules OR paraview_unrecognized_modules)
-    message(FATAL_ERROR
-      "The following modules were requested or required, but not found: "
-      "${paraview_required_modules};${paraview_unrecognized_modules}.")
+    message(STATUS "REQUIRED:${paraview_required_modules}")
+    foreach(mod ${paraview_required_modules})
+        if(NOT TARGET ${mod})
+            message(STATUS "REQUIRED TARGET not defined: ${mod}")
+            list(APPEND modules_notarget ${mod})
+        endif()
+    endforeach()
+    foreach(mod ${paraview_unrecognized_modules})
+        if(NOT TARGET ${mod})
+            message(STATUS "UNREC TARGET not defined: ${mod}")
+            list(FIND paraview_rejected_modules ${mod} _found_mod)
+            if(_found_mod GREATER_EQUAL 0)
+                message(STATUS "MODULE ${mod} not necessary; Removing from unrecognized")
+                list(APPEND _to_remove ${mod})
+            endif()
+        else()
+            list(APPEND _to_remove ${mod})
+            #list(APPEND vtk_modules ${mod}) #probably do not need to add unrecognized_modules to the wrapper
+        endif()
+    endforeach()
+    message(STATUS "UNRECOGNIZED:${paraview_unrecognized_modules}")
+    list(REMOVE_ITEM paraview_unrecognized_modules ${_to_remove})
+    message(STATUS "REJECTED MODULES: ${paraview_rejected_modules}")
+    message(STATUS "UNRECOGNIZED WITHOUT REJECTED AND KNOWN TARGETS: ${paraview_unrecognized_modules}")
+    message(STATUS "ALL PROVIDED MODULES: ${paraview_modules}")
+    set(_unnecessary_moduls ${paraview_modules})
+    list(REMOVE_ITEM _unnecessary_moduls ${paraview_required_modules})
+    message(STATUS "Unnecessary MODULES: ${_unnecessary_moduls}")
+    if(modules_notarget)
+        message(FATAL_ERROR
+          "The following modules were requested or required, but not found: "
+          "${modules_notarget}")
+    endif()
+    list(REMOVE_DUPLICATES vtk_modules)
   endif ()
 
   if (PARAVIEW_ENABLE_PYTHON)
@@ -887,11 +918,14 @@ vtk_module_build(
   USE_EXTERNAL        "${PARAVIEW_USE_EXTERNAL}"
   TEST_INPUT_DATA_DIRECTORY   "${paraview_test_data_directory_input}"
   TEST_OUTPUT_DATA_DIRECTORY  "${paraview_test_data_directory_output}")
-
+message(STATUS "VTKMOD:${vtk_modules}")
+message(STATUS "PARAVIEWMOD:${paraview_modules}")
 include(vtkModuleJson)
+if(NOT PARAVIEW_USE_EXTERNAL_VTK)
 vtk_module_json(
   MODULES "${vtk_modules}"
   OUTPUT "vtk-modules.json")
+endif()
 vtk_module_json(
   MODULES "${paraview_modules}"
   OUTPUT "paraview-modules.json")
diff --git a/CMake/vtkModuleWrapClientServer.cmake b/CMake/vtkModuleWrapClientServer.cmake
index 3804a24e2..91fdd593a 100644
--- a/CMake/vtkModuleWrapClientServer.cmake
+++ b/CMake/vtkModuleWrapClientServer.cmake
@@ -37,10 +37,13 @@ function (_vtk_module_wrap_client_server_sources module sources classes)
     "$<TARGET_PROPERTY:${_vtk_client_server_target_name},COMPILE_DEFINITIONS>")
   set(_vtk_client_server_genex_include_directories
     "$<TARGET_PROPERTY:${_vtk_client_server_target_name},INCLUDE_DIRECTORIES>")
+  set(_vtk_client_server_genex_interface_include_directories
+    "$<TARGET_PROPERTY:${_vtk_client_server_target_name},INTERFACE_INCLUDE_DIRECTORIES>")
   file(GENERATE
     OUTPUT  "${_vtk_client_server_args_file}"
     CONTENT "$<$<BOOL:${_vtk_client_server_genex_compile_definitions}>:\n-D\'$<JOIN:${_vtk_client_server_genex_compile_definitions},\'\n-D\'>\'>\n
-$<$<BOOL:${_vtk_client_server_genex_include_directories}>:\n-I\'$<JOIN:${_vtk_client_server_genex_include_directories},\'\n-I\'>\'>\n")
+             $<$<BOOL:${_vtk_client_server_genex_include_directories}>:\n-I\'$<JOIN:${_vtk_client_server_genex_include_directories},\'\n-I\'>\'>\n
+             $<$<BOOL:${_vtk_client_server_genex_interface_include_directories}>:\n-I\'$<JOIN:${_vtk_client_server_genex_interface_include_directories},\'\n-I\'>\'>\n")
 
   _vtk_module_get_module_property("${module}"
     PROPERTY  "hierarchy"
